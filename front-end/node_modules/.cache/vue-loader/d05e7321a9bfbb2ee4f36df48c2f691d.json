{"remainingRequest":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/colin/Workspace/src/platone-frontend/src/components/page/Login.vue?vue&type=style&index=0&id=3a8bfd4e&scoped=true&lang=css&","dependencies":[{"path":"/home/colin/Workspace/src/platone-frontend/src/components/page/Login.vue","mtime":1600072733803},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.login-wrap {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    background-image: url(../../assets/img/login-bg.jpg);\n    background-size: 100%;\n}\n.ms-title {\n    width: 100%;\n    line-height: 50px;\n    text-align: center;\n    font-size: 20px;\n    color: rgb(10, 127, 223);\n    border-bottom: 1px solid #ddd;\n}\n.ms-login {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: 350px;\n    margin: -190px 0 0 -175px;\n    border-radius: 5px;\n    background: rgba(255, 255, 255, 0.3);\n    overflow: hidden;\n}\n.ms-content {\n    padding: 30px 30px;\n}\n.login-btn {\n    text-align: center;\n}\n.login-btn button {\n    width: 100%;\n    height: 36px;\n    margin-bottom: 10px;\n}\n.login-tips {\n    font-size: 12px;\n    line-height: 30px;\n    color: #fff;\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div class=\"login-wrap\">\n        <div class=\"ms-login\">\n            <div class=\"ms-title\">{{$t('i18n.system_name')}}</div>\n            <el-form :model=\"param\" :rules=\"rules\" ref=\"login\" label-width=\"0px\" class=\"ms-content\">\n                <el-form-item prop=\"username\">\n                    <el-input v-model=\"param.username\" placeholder=\"username\">\n                        <el-button slot=\"prepend\" icon=\"el-icon-lx-people\"></el-button>\n                    </el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\">\n                    <el-input\n                        type=\"password\"\n                        placeholder=\"password\"\n                        v-model=\"param.password\"\n                        @keyup.enter.native=\"submitForm()\"\n                    >\n                        <el-button slot=\"prepend\" icon=\"el-icon-lx-lock\"></el-button>\n                    </el-input>\n                </el-form-item>\n                <div class=\"login-btn\">\n                    <el-button type=\"primary\" @click=\"submitForm()\">{{$t('i18n.login')}}</el-button>\n                </div>\n            </el-form>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {apiServerUrl} from '../../config'\nexport default {\n    data: function() {\n        return {\n            param: {\n                username: 'root',\n                password: '1231',\n            }\n        };\n    },\n    methods: {          \n        submitForm() {\n            this.$refs.login.validate(valid => {\n                if (valid) {\n                    this.axios.get(apiServerUrl + '/login',{\n                        params: {\n                            Name:this.param.username,\n                            Password:this.param.password\n                        }\n                    }).then(res => {\n                    if (res && res.data) {\n                        console.log(res.data)\n                        this.$message.success(this.$t('i18n.loginSuccess'));\n                        localStorage.setItem('ms_username', this.param.username);\n                        localStorage.setItem('ms_userrole', res.data.data.toLowerCase());\n                        this.$router.push('/');\n                    }\n                    }).catch(res => {\n                        this.$message.error(this.$t('i18n.loginFailed'));\n                    })\n                } else {\n                    this.$message.error(this.$t('i18n.enterNameAndPassword'));\n                    console.log('error submit!!');\n                    return false;\n                }\n            });\n        }\n    },\n    computed:{\n        rules() {\n            return {\n                username: [{ required: true, message: this.$t('i18n.enterName'), trigger: 'blur' }],\n                password: [{ required: true, message: this.$t('i18n.enterPassword'), trigger: 'blur' }],\n            }\n        }\n    }\n};\n</script>\n\n<style scoped>\n.login-wrap {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    background-image: url(../../assets/img/login-bg.jpg);\n    background-size: 100%;\n}\n.ms-title {\n    width: 100%;\n    line-height: 50px;\n    text-align: center;\n    font-size: 20px;\n    color: rgb(10, 127, 223);\n    border-bottom: 1px solid #ddd;\n}\n.ms-login {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: 350px;\n    margin: -190px 0 0 -175px;\n    border-radius: 5px;\n    background: rgba(255, 255, 255, 0.3);\n    overflow: hidden;\n}\n.ms-content {\n    padding: 30px 30px;\n}\n.login-btn {\n    text-align: center;\n}\n.login-btn button {\n    width: 100%;\n    height: 36px;\n    margin-bottom: 10px;\n}\n.login-tips {\n    font-size: 12px;\n    line-height: 30px;\n    color: #fff;\n}\n</style>"]}]}