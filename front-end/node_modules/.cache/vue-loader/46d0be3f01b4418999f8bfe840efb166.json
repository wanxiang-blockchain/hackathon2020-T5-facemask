{"remainingRequest":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/colin/Workspace/src/platone-frontend/src/components/page/Contracts.vue?vue&type=style&index=0&id=4c839b91&scoped=true&lang=css&","dependencies":[{"path":"/home/colin/Workspace/src/platone-frontend/src/components/page/Contracts.vue","mtime":1599553476240},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.ms-content {\n    padding: 30px 30px 10px 30px;\n}\n\n.btn{\n    width:100%\n}\n\na{\n    color: #3498db;\n}\n",{"version":3,"sources":["Contracts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoKA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Contracts.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n<div>\n    <el-form :model=\"param\" :rules=\"rules\" ref=\"search\" label-width=\"0px\" class=\"ms-content\" @submit.native.prevent>\n        <el-form-item prop=\"info\">\n            <el-input v-model=\"param.info\" placeholder=\"Search by contract address\" @keyup.enter.native=\"submitForm()\">\n                <el-button slot=\"prepend\" icon=\"el-icon-lx-search\"></el-button>\n            </el-input>\n        </el-form-item>\n    </el-form>\n    <div style=\"padding:0px 30px 10px 30px\">\n        <el-card shadow=\"hover\" >\n            <el-button type=\"primary\" round style=\"margin-bottom:10px\" @click=\"dialogFormVisible = true\">{{$t('i18n.deploy')}}</el-button>\n\n            <el-dialog :title=\"$t('i18n.deploy')\" :visible.sync=\"dialogFormVisible\">\n            <el-form :model=\"form\">\n                <el-form-item :label=\"$t('i18n.contractFile')\">\n                    <div style=\"display:inline-block\">\n                         <el-upload\n                            ref=\"upload\"\n                            drag\n                            action=\"\"\n                            multiple\n                            :http-request=\"httpRequest\"\n                            :auto-upload=\"false\">\n                                <i class=\"el-icon-upload\"></i>\n                                <div class=\"el-upload__text\">{{$t('i18n.dragFile')}}<em>{{$t('i18n.clickUpload')}}</em></div>\n                                <div class=\"el-upload__tip\" slot=\"tip\">{{$t('i18n.twoFile')}}</div>\n                        </el-upload>\n                    </div>\n                </el-form-item>\n                 <el-form-item :label=\"$t('i18n.isSetCNS')\">\n                    <el-switch v-model=\"form.setCNS\"></el-switch>\n                    <el-input v-model=\"form.CNS\" placeholder=\"CNS Name\" v-if=\"form.setCNS\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible = false\">{{$t('i18n.cancel')}}</el-button>\n                <el-button type=\"primary\" @click=\"submitDeploy\">{{$t('i18n.confirm')}}</el-button>\n            </div>\n            </el-dialog>\n\n            <el-table :data=\"contracts\">\n                <el-table-column :label=\"`${$t('i18n.scName')}`\" :max-width=\"250\" show-overflow-tooltip>\n                    <template slot-scope=\"scope\"><router-link :to = \"'/contract/' + scope.row.contract_address\">{{'(' + scope.row.contract_name + ')' + scope.row.contract_address}}</router-link></template>\n                </el-table-column>\n                <el-table-column :label=\"`Creator`\" show-overflow-tooltip  :max-width=\"250\">\n                    <template slot-scope=\"scope\"><router-link :to = \"'/address/' + scope.row.creator + '/txs'\">{{scope.row.creator}}</router-link></template>\n                </el-table-column>\n                <el-table-column :label=\"`Transaction`\"  show-overflow-tooltip :max-width=\"250\">\n                    <template slot-scope=\"scope\"><router-link :to = \"'/tx/' + scope.row.create_tx\">{{scope.row.create_tx}}</router-link></template>\n                </el-table-column>\n                <el-table-column :label=\"`${$t('i18n.time')}`\"  :width=\"150\">\n                    <template slot-scope=\"scope\">\n                        <span>{{(new Date(scope.row.timestamp *1000)).toLocaleString()}}</span>\n                    </template>  \n                </el-table-column>\n                </el-table>\n            <el-pagination  \n                @current-change=\"handleCurrentChange\" \n                @size-change=\"handleSizeChange\"\n                :current-page=\"currentPage\" \n                :page-size=\"PageSize\" layout=\"total, sizes, prev, pager, next, jumper\" \n                :total=\"totalCount\">\n              </el-pagination>\n        </el-card>\n    </div>\n</div>\n    \n</template>\n\n<script>\nimport {dataUrl} from '../../config'\nexport default {\n    data: function() {\n        return {\n            param: {\n                info: '',\n            },\n            contracts:[],\n            currentPage:1,\n            PageSize:10,\n            totalCount:100,\n            form: {\n                setCNS:false,\n                CNS:\"\"\n            },\n            file:[],\n            dialogFormVisible: false\n        }\n    },\n    methods: {\n        submitForm() {\n            this.$refs.search.validate(valid => {\n                if (valid) {\n                    this.axios.get(dataUrl + '/contract/' + this.param.info)\n                    .then(res => {\n                        if(res.data && res.data.contract_address){\n                            this.$router.push('/contract/' + res.data.contract_address);\n                        }\n                    }).catch(res => {\n                        return false;\n                    });\n                } else {\n                    this.$message.error(this.$t(\"i18n.searchInfo\"));\n                    return false;\n                }\n            });\n        },\n        httpRequest(param){\n            this.file.push(param.file)\n        },\n\n        submitDeploy(){\n            this.$refs.upload.submit();\n\n            var updata = new FormData();\n            this.file.forEach(function(file){\n                updata.append('file',file,file.name)\n            })\n            updata.append('body',JSON.stringify(this.form))\n            console.log(updata.getAll('file'))\n            console.log(updata.get('body'))\n            this.dialogFormVisible = false\n        },\n        onRowClick (row, column, event){\n            alert(row.miner)\n        },\n        getData(){\n            this.axios.get(dataUrl + '/contracts',{\n                    params: {\n                        page_index: this.currentPage,\n                        page_size: this.PageSize\n                    }\n                }).then(res => {\n                this.contracts = res.data.items;\n            }).catch(res => {\n                alert('wrong scdata');\n            });\n        },\n        handleCurrentChange(val){\n            this.currentPage = val;\n            this.getData();\n        },\n        handleSizeChange(val){\n            this.PageSize = val;\n             this.getData();\n        }\n    },\n    mounted:function() {\n        this.getData()\n        setInterval(this.getData(),2000)\n    },    \n    computed:{\n        rules()\n        {\n            return {\n                info: [{ required: true, message: this.$t(\"i18n.searchInfo\"), trigger: 'blur' }]\n            }    \n        },\n    }\n};\n</script>\n\n<style scoped>\n.ms-content {\n    padding: 30px 30px 10px 30px;\n}\n\n.btn{\n    width:100%\n}\n\na{\n    color: #3498db;\n}\n</style>\n\n"]}]}