{"remainingRequest":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/colin/Workspace/src/platone-frontend/src/components/page/Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/colin/Workspace/src/platone-frontend/src/components/page/Users.vue","mtime":1600914193079},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {dataUrl,apiServerUrl} from '../../config'\nexport default {\n    data: function() {\n        return {\n            userList:[],\n            dialogFormVisible:false,\n            inputDisabled : false,\n            form:{\n                username:\"\",\n                password:\"\",\n                newpassword:\"\",\n                role:\"USER\"\n            }\n        }\n    },\n    methods: {\n        getData(){\n            this.axios.get(apiServerUrl + '/superadmin/getusers',{\n                params: {\n                            PageIndex:1,\n                            PageSize:10000\n                        }\n            })\n            .then(res => {\n                console.log(res.data);\n                this.userList = res.data.data;\n            }).catch(res => {\n                console.log(res);\n            });\n        },\n        openDialog(){\n            this.resetForm()\n            this.dialogFormVisible = true\n            this.inputDisabled = false\n        },\n        onRowClick(row){\n            this.form = {\n                username:row.name,\n                password:\"\",\n                role:row.role\n            }\n            this.dialogFormVisible = true\n            this.inputDisabled = true\n        },\n        submitForm(){\n            this.$refs.adduser.validate(valid => {\n                if (valid) {\n                    let url = apiServerUrl + '/superadmin/adduser';\n                    if (this.inputDisabled){\n                        url = apiServerUrl + '/superadmin/update'\n                    }\n                    this.axios.get(url,{\n                        params: {\n                            Name:this.form.username,\n                            Password:this.form.password,\n                            NewPassword:this.form.newpassword,\n                            Role:this.form.role,\n                            Passphrase:'0'\n                        }\n                    }).then(res => {\n                    if (res && res.data) {\n                        console.log(res.data)\n                        this.$message.success(this.$t('i18n.submitSuccess'));\n                        this.getData()\n                    }\n                    }).catch(res => {\n                        this.$message.error(this.$t('i18n.submitFailed'));\n                    })\n                } else {\n                    this.$message.error(this.$t('i18n.enterNameAndPassword'));\n                }\n            });\n\n            this.resetForm()\n            this.dialogFormVisible = false\n        },\n        cancel(){\n            this.resetForm()\n            this.dialogFormVisible = false\n        },\n        resetForm(){\n            this.form = {\n                username:\"\",\n                password:\"\",\n                newpassword:\"\",\n                role:\"USER\"\n            }\n        }\n    },\n    mounted:function() {\n        this.getData()\n        setInterval(this.getData(),2000)\n    },\n    computed:{\n        rules() {\n            return {\n                username: [{ required: true, message: this.$t('i18n.enterName'), trigger: 'blur' }],\n                password: [{ required: true, message: this.$t('i18n.enterPassword'), trigger: 'blur' }],\n            }\n        }\n    },\n    props:{\n        height:{\n            default:270\n        }\n    }\n};\n",{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n<div>\n    <div slot=\"header\">\n        <span>{{$t('i18n.userList')}}</span>\n        <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"openDialog\">{{$t('i18n.add')}}</el-button>\n    </div>\n    <el-scrollbar style=\"height:100%;\">\n    <el-table :data=\"userList\" :max-height=\"height\">\n        <el-table-column :label=\"`${$t('i18n.account')}`\" :width=\"220\" show-overflow-tooltip>\n            <template slot-scope=\"scope\">\n                 <el-button type=\"text\" @click=\"onRowClick(scope.row)\">{{scope.row.name}}</el-button>\n            </template>\n        </el-table-column>\n        <el-table-column prop=\"role\" :label=\"`${$t('i18n.role')}`\" show-overflow-tooltip ></el-table-column>\n        <el-table-column prop=\"registertime\" :label=\"`${$t('i18n.createDate')}`\" show-overflow-tooltip ></el-table-column>\n    </el-table>\n    </el-scrollbar>\n\n    <el-dialog :title=\"$t('i18n.user')\" :visible.sync=\"dialogFormVisible\">\n        <el-form :model=\"form\" label-width=\"100px\" :rules=\"rules\" ref=\"adduser\" :label-position=\"'left'\">\n            <el-form-item :label=\"$t('i18n.account')\" style=\"width:350px\" prop=\"username\">\n                <el-input v-model=\"form.username\" placeholder=\"\" :disabled=\"inputDisabled\"></el-input>\n            </el-form-item>\n            <el-form-item :label=\"$t('i18n.password')\" style=\"width:350px\" prop=\"password\" v-if=\"!inputDisabled\">\n                <el-input v-model=\"form.password\" placeholder=\"\"></el-input>\n            </el-form-item>\n            <el-form-item :label=\"$t('i18n.password')\" style=\"width:350px\" prop=\"newpassword\" v-if=\"inputDisabled\">\n                <el-input v-model=\"form.newpassword\" placeholder=\"\"></el-input>\n            </el-form-item>\n            <el-form-item :label=\"$t('i18n.role')\">\n                <el-select v-model=\"form.role\" placeholder=\"\">\n                    <el-option key=\"USER\" :label=\"$t('i18n.user')\" value=\"USER\"></el-option>\n                    <el-option key=\"SUPERADMIN\" :label=\"$t('i18n.admin')\" value=\"SUPERADMIN\"></el-option>\n                </el-select>\n            </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"cancel\">{{$t('i18n.cancel')}}</el-button>\n            <el-button type=\"primary\" @click=\"submitForm\">{{$t('i18n.confirm')}}</el-button>\n        </div>\n    </el-dialog>\n</div>\n</template>\n\n<script>\nimport {dataUrl,apiServerUrl} from '../../config'\nexport default {\n    data: function() {\n        return {\n            userList:[],\n            dialogFormVisible:false,\n            inputDisabled : false,\n            form:{\n                username:\"\",\n                password:\"\",\n                newpassword:\"\",\n                role:\"USER\"\n            }\n        }\n    },\n    methods: {\n        getData(){\n            this.axios.get(apiServerUrl + '/superadmin/getusers',{\n                params: {\n                            PageIndex:1,\n                            PageSize:10000\n                        }\n            })\n            .then(res => {\n                console.log(res.data);\n                this.userList = res.data.data;\n            }).catch(res => {\n                console.log(res);\n            });\n        },\n        openDialog(){\n            this.resetForm()\n            this.dialogFormVisible = true\n            this.inputDisabled = false\n        },\n        onRowClick(row){\n            this.form = {\n                username:row.name,\n                password:\"\",\n                role:row.role\n            }\n            this.dialogFormVisible = true\n            this.inputDisabled = true\n        },\n        submitForm(){\n            this.$refs.adduser.validate(valid => {\n                if (valid) {\n                    let url = apiServerUrl + '/superadmin/adduser';\n                    if (this.inputDisabled){\n                        url = apiServerUrl + '/superadmin/update'\n                    }\n                    this.axios.get(url,{\n                        params: {\n                            Name:this.form.username,\n                            Password:this.form.password,\n                            NewPassword:this.form.newpassword,\n                            Role:this.form.role,\n                            Passphrase:'0'\n                        }\n                    }).then(res => {\n                    if (res && res.data) {\n                        console.log(res.data)\n                        this.$message.success(this.$t('i18n.submitSuccess'));\n                        this.getData()\n                    }\n                    }).catch(res => {\n                        this.$message.error(this.$t('i18n.submitFailed'));\n                    })\n                } else {\n                    this.$message.error(this.$t('i18n.enterNameAndPassword'));\n                }\n            });\n\n            this.resetForm()\n            this.dialogFormVisible = false\n        },\n        cancel(){\n            this.resetForm()\n            this.dialogFormVisible = false\n        },\n        resetForm(){\n            this.form = {\n                username:\"\",\n                password:\"\",\n                newpassword:\"\",\n                role:\"USER\"\n            }\n        }\n    },\n    mounted:function() {\n        this.getData()\n        setInterval(this.getData(),2000)\n    },\n    computed:{\n        rules() {\n            return {\n                username: [{ required: true, message: this.$t('i18n.enterName'), trigger: 'blur' }],\n                password: [{ required: true, message: this.$t('i18n.enterPassword'), trigger: 'blur' }],\n            }\n        }\n    },\n    props:{\n        height:{\n            default:270\n        }\n    }\n};\n</script>\n\n<style scoped>\n.ms-content {\n    padding: 30px 30px 10px 30px;\n}\n\n.btn{\n    width:100%\n}\n\na{\n    color: #3498db;\n}\n\n.button-custom{\n    padding:0px;\n    border: 0px;\n}\n</style>\n\n"]}]}