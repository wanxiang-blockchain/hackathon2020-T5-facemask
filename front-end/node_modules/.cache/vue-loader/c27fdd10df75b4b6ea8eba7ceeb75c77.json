{"remainingRequest":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/colin/Workspace/src/platone-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/colin/Workspace/src/platone-frontend/src/components/page/Blocks.vue?vue&type=template&id=2d0b8c46&scoped=true&","dependencies":[{"path":"/home/colin/Workspace/src/platone-frontend/src/components/page/Blocks.vue","mtime":1601349847743},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"blocks\" },\n    [\n      _c(\n        \"el-form\",\n        {\n          ref: \"search\",\n          staticClass: \"ms-content\",\n          attrs: { model: _vm.param, rules: _vm.rules, \"label-width\": \"0px\" },\n          nativeOn: {\n            submit: function($event) {\n              $event.preventDefault()\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"info\" } },\n            [\n              _c(\n                \"el-input\",\n                {\n                  attrs: { placeholder: \"Search by Block Number/Hash\" },\n                  nativeOn: {\n                    keyup: function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                      ) {\n                        return null\n                      }\n                      return _vm.submitForm($event)\n                    }\n                  },\n                  model: {\n                    value: _vm.param.info,\n                    callback: function($$v) {\n                      _vm.$set(_vm.param, \"info\", $$v)\n                    },\n                    expression: \"param.info\"\n                  }\n                },\n                [\n                  _c(\"el-button\", {\n                    attrs: { slot: \"prepend\", icon: \"el-icon-lx-search\" },\n                    slot: \"prepend\"\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticStyle: { padding: \"0px 30px 10px 30px\" } },\n        [\n          _c(\n            \"el-card\",\n            { attrs: { shadow: \"hover\" } },\n            [\n              _c(\n                \"el-table\",\n                { attrs: { data: _vm.bkList } },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"\" + _vm.$t(\"i18n.bkh\"), width: 80 },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\n                              \"router-link\",\n                              { attrs: { to: \"/block/\" + scope.row.height } },\n                              [_vm._v(_vm._s(scope.row.height))]\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"\" + _vm.$t(\"i18n.miner\"),\n                      \"max-width\": 280,\n                      \"show-overflow-tooltip\": \"\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\n                              \"router-link\",\n                              {\n                                attrs: {\n                                  to: \"/address/\" + scope.row.proposer + \"/txs\"\n                                }\n                              },\n                              [_vm._v(_vm._s(scope.row.proposer))]\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"\" + _vm.$t(\"i18n.txcnt\"), width: 80 },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\n                              \"router-link\",\n                              {\n                                attrs: {\n                                  to: \"/block/\" + scope.row.height + \"/txs\"\n                                }\n                              },\n                              [_vm._v(_vm._s(scope.row.tx_amount))]\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"\" + _vm.$t(\"i18n.gasUsed\") },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"span\", [_vm._v(_vm._s(scope.row.gas_used))]),\n                            _c(\"span\", [\n                              _vm._v(\n                                _vm._s(\n                                  \"(\" +\n                                    (scope.row.gas_limit == 0\n                                      ? 0\n                                      : (scope.row.gas_used /\n                                          scope.row.gas_limit) *\n                                        100\n                                    ).toFixed(4) +\n                                    \"%)\"\n                                )\n                              )\n                            ]),\n                            _c(\"el-progress\", {\n                              attrs: {\n                                \"show-text\": false,\n                                \"stroke-width\": 5,\n                                percentage:\n                                  scope.row.gas_limit == 0\n                                    ? 0\n                                    : (scope.row.gas_used /\n                                        scope.row.gas_limit) *\n                                      100\n                              }\n                            })\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"\" + _vm.$t(\"i18n.size\"), width: 150 },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"span\", [\n                              _vm._v(_vm._s(scope.row.size + \" Bytes\"))\n                            ])\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"\" + _vm.$t(\"i18n.time\"), width: 150 },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"span\", [\n                              _vm._v(\n                                _vm._s(\n                                  new Date(\n                                    scope.row.timestamp * 1000\n                                  ).toLocaleString()\n                                )\n                              )\n                            ])\n                          ]\n                        }\n                      }\n                    ])\n                  })\n                ],\n                1\n              ),\n              _c(\"el-pagination\", {\n                staticStyle: { \"padding-top\": \"10px\" },\n                attrs: {\n                  \"current-page\": _vm.currentPage,\n                  \"page-size\": _vm.PageSize,\n                  layout: \"total, sizes, prev, pager, next, jumper\",\n                  total: _vm.totalCount\n                },\n                on: {\n                  \"current-change\": _vm.handleCurrentChange,\n                  \"size-change\": _vm.handleSizeChange\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}