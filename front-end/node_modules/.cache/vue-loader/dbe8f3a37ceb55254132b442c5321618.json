{"remainingRequest":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/colin/Workspace/src/platone-frontend/src/components/page/Params.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/colin/Workspace/src/platone-frontend/src/components/page/Params.vue","mtime":1600857878421},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {dataUrl,apiServerUrl} from '../../config'\nexport default {\n    data() {\n        return {\n            form: {\n                gasContractName: '',\n                allowEmpty:1==0?false:true,\n                txGasLimit:0,\n                bkGasLimit:0,\n                checkContractDeployPermission:1==0?false:true,\n                checkContractAfterDeploy:1==0?false:true,\n                txConsumeGas:1==0?false:true,\n                fw:false\n            },\n        };\n    },\n    methods: {\n        getData(){\n            this.axios.get(apiServerUrl + '/superadmin/systemconfig/getsystemconfig')\n            .then(res => {\n                if (res && res.data) {\n                   let resData = JSON.parse(res.data.data)\n                   console.log(resData)\n                   this.form.gasContractName = resData.gasContractName.replace('\"\"','');\n                   this.form.txGasLimit = parseInt(resData.txGasLimit);\n                   this.form.bkGasLimit = parseInt(resData.blockGasLimit);\n\n                   this.form.allowEmpty = resData.isProduceEmptyBlock == \"1\";\n                   this.form.checkContractDeployPermission = resData.isCheckDeployPermission == \"1\";\n                   this.form.checkContractAfterDeploy = resData.isApproveDeployedContract == \"1\";\n                   this.form.txConsumeGas = resData.isUseGas == \"1\";\n                }\n            }).catch(res => {\n                console.log(res)\n            })\n        },\n        onSubmit() {\n            this.axios.get(apiServerUrl + '/superadmin/systemconfig/getsystemconfig')\n            .then(res => {\n                if (res && res.data) {\n                    let resData = JSON.parse(res.data.data)\n                    let setparams = {}\n\n                    if (this.form.gasContractName != resData.gasContractName.replace('\"\"','')){\n                        setparams.GasContractName = this.form.gasContractName;\n                    }\n                    if (this.form.txGasLimit != parseInt(resData.txGasLimit)){\n                        setparams.TxGasLimit = this.form.txGasLimit;\n                    }\n                    if (this.form.bkGasLimit != parseInt(resData.blockGasLimit)){\n                        setparams.BlockGasLimit = this.form.bkGasLimit;\n                    }\n                    if (this.form.allowEmpty != resData.isProduceEmptyBlock == \"1\"){\n                        setparams.IsProduceEmptyBlock = this.form.allowEmpty?1:0;\n                    }\n                    if (this.form.checkContractDeployPermission != resData.isCheckDeployPermission == \"1\"){\n                        setparams.IsCheckDeployPermission = this.form.checkContractDeployPermission?1:0;\n                    }\n                    if (this.form.checkContractAfterDeploy != resData.isApproveDeployedContract == \"1\"){\n                        setparams.IsApproveDeployedContract = this.form.checkContractAfterDeploy?1:0;\n                    }\n                    if (this.form.txConsumeGas != resData.isUseGas == \"1\"){\n                        setparams.IsUseGas = this.form.txConsumeGas?1:0;\n                    }\n\n                    if (this.form.txGasLimit >= this.form.bkGasLimit) {\n                        this.$message.error(\"txGasLimit must not bigger than bkGasLimit\");\n                    }\n\n                    this.axios.get(apiServerUrl + '/superadmin/systemconfig/setsystemconfig',{\n                        params:setparams\n                    }).then(res => {\n                        console.log(res)\n                        this.$message.success(this.$t('i18n.submitSuccess'));\n                    }).catch(res =>{\n                        this.$message.error(this.$t('i18n.submitFailed'));\n                    })\n                }\n            }).catch(res => {\n                console.log(res)\n            })\n        }\n    },\n    mounted:function() {\n        this.getData();\n        setTimeout(this.getData,1000)\n    },\n};\n",{"version":3,"sources":["Params.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Params.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div class=\"form-box\">\n        <el-form ref=\"form\" :model=\"form\" label-width=\"150px\"  :label-position=\"'left'\" style=\"display:block\">\n            <el-form-item :label=\"$t('i18n.gasConsumeTokenContractName')\" >\n                <el-input v-model=\"form.gasContractName\" style=\"width:400px\"></el-input>\n            </el-form-item>\n            <el-form-item :label=\"$t('i18n.txConsumeGas')\" label-width=\"150px\">\n                <el-switch v-model=\"form.txConsumeGas\"></el-switch>\n            </el-form-item>\n            <el-form-item :label=\"$t('i18n.txGasLimit')\"  label-width=\"110px\">\n                <el-slider v-model=\"form.txGasLimit\" :min=\"0\" :max=\"2000000000\" show-input input-size=\"mini\" style=\"width:400px\"></el-slider>\n            </el-form-item>\n            <el-form-item :label=\"$t('i18n.bkGasLimit')\"  label-width=\"110px\">\n                <el-slider v-model=\"form.bkGasLimit\" :min=\"0\" :max=\"20000000000\" show-input input-size=\"mini\" style=\"width:400px\"></el-slider>\n            </el-form-item>\n            <el-form-item :label=\"$t('i18n.checkDeployPermission')\"  style=\"display:inline-block\"  label-width=\"150px\">\n                <el-switch v-model=\"form.checkContractDeployPermission\"></el-switch>\n            </el-form-item>\n            <el-form-item :label=\"$t('i18n.reviewAfterDeploy')\" style=\"display:inline-block;margin-left:50px\"  label-width=\"200px\">\n                <el-switch v-model=\"form.checkContractAfterDeploy\"></el-switch>\n            </el-form-item>\n            <el-form-item :label=\"$t('i18n.isEmptyBlock')\"  style=\"display:inline-block\"   label-width=\"150px\">\n                <el-switch v-model=\"form.allowEmpty\"></el-switch>\n            </el-form-item>\n            <el-form-item :label=\"$t('i18n.firewall')\" style=\"display:inline-block;margin-left:50px\"  label-width=\"150px\">\n                <el-switch v-model=\"form.fw\" disabled></el-switch>\n            </el-form-item>\n            <el-form-item style=\"margin-top:15px\" label-width=\"230px\">\n                <el-button type=\"primary\" @click=\"onSubmit\">{{$t('i18n.submitChanges')}}</el-button>\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n\n<script>\nimport {dataUrl,apiServerUrl} from '../../config'\nexport default {\n    data() {\n        return {\n            form: {\n                gasContractName: '',\n                allowEmpty:1==0?false:true,\n                txGasLimit:0,\n                bkGasLimit:0,\n                checkContractDeployPermission:1==0?false:true,\n                checkContractAfterDeploy:1==0?false:true,\n                txConsumeGas:1==0?false:true,\n                fw:false\n            },\n        };\n    },\n    methods: {\n        getData(){\n            this.axios.get(apiServerUrl + '/superadmin/systemconfig/getsystemconfig')\n            .then(res => {\n                if (res && res.data) {\n                   let resData = JSON.parse(res.data.data)\n                   console.log(resData)\n                   this.form.gasContractName = resData.gasContractName.replace('\"\"','');\n                   this.form.txGasLimit = parseInt(resData.txGasLimit);\n                   this.form.bkGasLimit = parseInt(resData.blockGasLimit);\n\n                   this.form.allowEmpty = resData.isProduceEmptyBlock == \"1\";\n                   this.form.checkContractDeployPermission = resData.isCheckDeployPermission == \"1\";\n                   this.form.checkContractAfterDeploy = resData.isApproveDeployedContract == \"1\";\n                   this.form.txConsumeGas = resData.isUseGas == \"1\";\n                }\n            }).catch(res => {\n                console.log(res)\n            })\n        },\n        onSubmit() {\n            this.axios.get(apiServerUrl + '/superadmin/systemconfig/getsystemconfig')\n            .then(res => {\n                if (res && res.data) {\n                    let resData = JSON.parse(res.data.data)\n                    let setparams = {}\n\n                    if (this.form.gasContractName != resData.gasContractName.replace('\"\"','')){\n                        setparams.GasContractName = this.form.gasContractName;\n                    }\n                    if (this.form.txGasLimit != parseInt(resData.txGasLimit)){\n                        setparams.TxGasLimit = this.form.txGasLimit;\n                    }\n                    if (this.form.bkGasLimit != parseInt(resData.blockGasLimit)){\n                        setparams.BlockGasLimit = this.form.bkGasLimit;\n                    }\n                    if (this.form.allowEmpty != resData.isProduceEmptyBlock == \"1\"){\n                        setparams.IsProduceEmptyBlock = this.form.allowEmpty?1:0;\n                    }\n                    if (this.form.checkContractDeployPermission != resData.isCheckDeployPermission == \"1\"){\n                        setparams.IsCheckDeployPermission = this.form.checkContractDeployPermission?1:0;\n                    }\n                    if (this.form.checkContractAfterDeploy != resData.isApproveDeployedContract == \"1\"){\n                        setparams.IsApproveDeployedContract = this.form.checkContractAfterDeploy?1:0;\n                    }\n                    if (this.form.txConsumeGas != resData.isUseGas == \"1\"){\n                        setparams.IsUseGas = this.form.txConsumeGas?1:0;\n                    }\n\n                    if (this.form.txGasLimit >= this.form.bkGasLimit) {\n                        this.$message.error(\"txGasLimit must not bigger than bkGasLimit\");\n                    }\n\n                    this.axios.get(apiServerUrl + '/superadmin/systemconfig/setsystemconfig',{\n                        params:setparams\n                    }).then(res => {\n                        console.log(res)\n                        this.$message.success(this.$t('i18n.submitSuccess'));\n                    }).catch(res =>{\n                        this.$message.error(this.$t('i18n.submitFailed'));\n                    })\n                }\n            }).catch(res => {\n                console.log(res)\n            })\n        }\n    },\n    mounted:function() {\n        this.getData();\n        setTimeout(this.getData,1000)\n    },\n};\n</script>\n<style scoped>\n.form-box >>> .el-input-number--mini .el-input__inner{\n    padding-left: 10px!important;\n    padding-right: 10px;\n}\n.form-box >>> .el-input-number__decrease{\n    width:23px;\n}\n.form-box >>> .el-input-number__increase{\n    width:23px;\n}\n</style>"]}]}