{"remainingRequest":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/colin/Workspace/src/platone-frontend/src/components/page/Explorer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/colin/Workspace/src/platone-frontend/src/components/page/Explorer.vue","mtime":1599012424768},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {dataUrl} from '../../config'\nexport default {\n    data: function() {\n        return {\n            bkList:[],\n            txList:[]\n        }\n    },\n    methods: {\n        onClickBk(){\n            this.$router.push('/blocks');\n        },\n        onClickTx(){\n            this.$router.push('/txs');\n        },\n        getData(){\n            this.axios.get(dataUrl + '/blocks',{\n                    params: {\n                        page_index: 1,\n                        page_size:7\n                    }\n                }).then(res => {\n                this.bkList = res.data.items;\n            }).catch(res => {\n                alert('wrong bkdata');\n            });\n\n            this.axios.get(dataUrl + '/txs',{\n                    params: {\n                        page_index: 1,\n                        page_size:7\n                    }\n                }).then(res => {\n                this.txList = res.data.items;\n            }).catch(res => {\n                alert('wrong txdata');\n            });\n        }\n    },\n    mounted:function() {\n        this.getData()\n        setInterval(this.getData(),2000)\n    }\n};\n",{"version":3,"sources":["Explorer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Explorer.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n<div class = \"explorer\">\n    <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n                <el-card shadow=\"hover\">\n                    <div slot=\"header\" style=\"margin-bottom:10px\">\n                        <span>{{$t('i18n.bkList')}}</span>\n                    </div>\n                    <el-table :data=\"bkList\" style=\"width:100%;\"  max-height=\"550\" :show-header=\"false\">\n                    <el-table-column :width=\"250\">\n                        <template slot-scope=\"scope\">\n                            <div class=\"bk_icon\"><span>BK</span></div>\n                            <div class=\"bk_icon_right\">\n                                <router-link :to = \"'block/' + scope.row.height\" style=\"display:block\">{{scope.row.height}}</router-link>\n                                <div>{{new Date(scope.row.timestamp *1000).toLocaleString()}}</div>\n                            </div>\n                        </template>\n                    </el-table-column>\n                    <el-table-column>\n                        <template slot-scope=\"scope\">\n                            <div style=\"display:block\">\n                                <span style=\"font-weight:bold;\">Miner </span>\n                                <a>{{scope.row.proposer}}</a>\n                            </div>\n                            <div style=\"display:block\">\n                                <a>{{scope.row.tx_amount}}</a>\n                                 <span style=\"\">  txns in this block </span>\n                            </div>\n                        </template>\n                    </el-table-column>\n                    </el-table>\n                    <div>\n                        <el-button type=\"primary\" class=\"btn\" @click=\"onClickBk\">{{$t('i18n.viewAllBks')}}</el-button>\n                    </div>\n                </el-card>\n        </el-col>\n        <el-col :span=\"12\">\n            <el-card shadow=\"hover\">\n                <div slot=\"header\" style=\"margin-bottom:10px\">\n                        <span>{{$t('i18n.txList')}}</span>\n                </div>\n                <el-table :data=\"txList\" max-height=\"550\" :show-header=\"false\">\n                <el-table-column :width=\"330\" show-overflow-tooltip>\n                    <template slot-scope=\"scope\">\n                            <div class=\"bk_icon tx_icon\"><span>TX</span></div>\n                            <div class=\"bk_icon_right\">\n                                <router-link :to = \"'tx/' + scope.row.tx_hash\" class=\"txhash\">{{scope.row.tx_hash}}</router-link>\n                                <div>{{(new Date(scope.row.timestamp *1000)).toLocaleString()}}</div>\n                            </div>\n                        </template>\n                </el-table-column>\n                <el-table-column  show-overflow-tooltip >\n                    <template slot-scope=\"scope\">\n                            <div class=\"txhash\">\n                                <span style=\"font-weight:bold;\">From: </span>\n                                <a >{{scope.row.from}}</a>\n                            </div>\n                            <div class=\"txhash\">\n                                <span style=\"font-weight:bold;\">To: </span>\n                                <a>{{scope.row.to}}</a>\n                            </div>\n                        </template>\n                </el-table-column>\n                </el-table>\n                <div>\n                    <el-button type=\"primary\" class=\"btn\"  @click=\"onClickTx\">{{$t('i18n.viewAllTxs')}}</el-button>\n                </div>\n            </el-card>\n        </el-col>\n    </el-row>\n</div>\n</template>\n\n<script>\nimport {dataUrl} from '../../config'\nexport default {\n    data: function() {\n        return {\n            bkList:[],\n            txList:[]\n        }\n    },\n    methods: {\n        onClickBk(){\n            this.$router.push('/blocks');\n        },\n        onClickTx(){\n            this.$router.push('/txs');\n        },\n        getData(){\n            this.axios.get(dataUrl + '/blocks',{\n                    params: {\n                        page_index: 1,\n                        page_size:7\n                    }\n                }).then(res => {\n                this.bkList = res.data.items;\n            }).catch(res => {\n                alert('wrong bkdata');\n            });\n\n            this.axios.get(dataUrl + '/txs',{\n                    params: {\n                        page_index: 1,\n                        page_size:7\n                    }\n                }).then(res => {\n                this.txList = res.data.items;\n            }).catch(res => {\n                alert('wrong txdata');\n            });\n        }\n    },\n    mounted:function() {\n        this.getData()\n        setInterval(this.getData(),2000)\n    }\n};\n</script>\n\n<style scoped>\n.ms-content {\n    padding: 30px 30px;\n}\n.text-overflow{\n    overflow: hidden;\n    text-overflow:ellipsis;\n    white-space: nowrap;\n}\n.btn{\n    width:100%\n}\na{\n    color: #3498db;\n}\n\n.explorer{}\n.explorer >>> .el-card__header{padding-bottom: 5px;padding-left:10px;}\n.explorer >>> .el-card__body{padding:0px}\n.bk_icon{\n    width:40px;\n    height:40px;\n    background-color:#f0f0f0;\n    text-align: center;\n    line-height: 40px;\n    font-weight:bold;\n    border-radius: 5px;\n    float:left\n}\n\n.tx_icon{\n    border-radius: 20px;\n}\n\n.bk_icon_right{\n    display:inline-block;\n    height:40px;\n    margin-left:5px;\n}\n\n.txhash{\n    display:block;\n    width:250px;\n    overflow:hidden;\n    text-overflow: ellipsis;\n}\n</style>\n\n"]}]}