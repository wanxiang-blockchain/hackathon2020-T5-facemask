{"remainingRequest":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/colin/Workspace/src/platone-frontend/src/components/page/CNSs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/colin/Workspace/src/platone-frontend/src/components/page/CNSs.vue","mtime":1601351078941},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/colin/Workspace/src/platone-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {dataUrl,apiServerUrl} from '../../config'\nexport default {\n    data() {\n        return {\n            cnsList: [],\n            dialogFormVisible : false,\n            form:{\n                name:\"\",\n                version:\"\",\n                address:\"\",\n                infos:[]\n            },\n            isEdit:false\n        }\n    },\n    methods:{\n        getData(){\n            this.axios.get(dataUrl + '/cns',{\n                    params: {\n                        page_index: 1,\n                        page_size: 10000\n                    }\n                }).then(res => {\n                if (res && res.data) {\n                    this.cnsList = res.data.items;\n                }\n            }).catch(res => {\n                console.log(res)\n            })\n        },\n        openDialog(){\n            this.resetForm()\n            this.isEdit = false;\n            this.dialogFormVisible = true\n        },\n        onRowClick(row){\n            this.form = {\n                name:row.name,\n                version:row.version,\n                address:row.address,\n                infos:row.infos\n            }\n            this.isEdit = true\n            this.dialogFormVisible = true\n        },\n        submitForm(){\n            let url = '/superadmin/cns/setcnsnameforaddress'\n            if (this.isEdit){\n                url = '/superadmin/cns/cnsredirect'\n            }\n            this.axios.get(apiServerUrl + url,{\n                params: {\n                    Name:this.form.name,\n                    Version:this.form.version,\n                    Address:this.form.address\n                }\n            }).then(res => {\n                this.$message({\n                    type: 'success',\n                    message: this.$t('i18n.submitSuccess')\n                });\n            }).catch(res => {\n                this.$message({\n                    type: 'error',\n                    message: this.$t('i18n.submitFailed')\n                });\n            });\n\n            this.resetForm()\n            this.dialogFormVisible = false\n        },\n        cancel(){\n            this.resetForm()\n            this.dialogFormVisible = false\n        },\n        resetForm(){\n            this.form = {\n                name:\"\",\n                version:\"\",\n                address:\"\",\n                infos:[]\n            }\n        },\n        onRadioChange(val){\n            for  (let i = 0;i < this.form.infos.length ;i++){\n                let info = this.form.infos[i];\n                if (info.version == val){\n                    this.form.address = info.address;\n                }\n            }\n        }\n    },\n    mounted:function() {\n        this.getData()\n        setInterval(this.getData,5000)\n    },\n    props:{\n        height:{\n            default:270\n        }\n    }\n}\n",{"version":3,"sources":["CNSs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CNSs.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n<div>\n    <div slot=\"header\">\n        <span>{{$t('i18n.cnsList')}}</span>\n        <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"openDialog\">{{$t('i18n.add')}}</el-button>\n    </div>\n        <el-scrollbar style=\"height:100%;\">\n        <el-table :data=\"cnsList\" :max-height=\"height\" style=\"width:100%\">\n        <el-table-column :label=\"`${$t('i18n.scName')}`\" :width=\"130\">\n            <template slot-scope=\"scope\">\n                 <el-button type=\"text\" @click=\"onRowClick(scope.row)\">{{scope.row.name}}</el-button>\n            </template>\n        </el-table-column>\n        <el-table-column prop=\"version\" :label=\"`${$t('i18n.currVersion')}`\"  width=\"130\"></el-table-column>\n        <el-table-column prop=\"address\" :label=\"`${$t('i18n.currAddr')}`\" ></el-table-column>\n        </el-table>\n        </el-scrollbar>\n\n\n        <el-dialog :title=\"'CNS'\" :visible.sync=\"dialogFormVisible\">\n        <el-form :model=\"form\" label-width=\"150px\"  :label-position=\"'left'\">\n            <el-form-item :label=\"$t('i18n.cnsContractName') + ':'\" style=\"width:350px\">\n                <el-input v-model=\"form.name\" :placeholder=\"$t('i18n.pinput')\" :disabled=\"isEdit\"></el-input>\n            </el-form-item>\n            <el-form-item :label=\"$t('i18n.version') + ':'\" style=\"width:350px\" v-if=\"!isEdit\">\n                <el-input v-model=\"form.version\" :placeholder=\"$t('i18n.version') +' 0.0.0.1'\"></el-input>\n            </el-form-item>\n            <el-form-item :label=\"$t('i18n.version') + ':'\"  v-if=\"isEdit\">\n                <div v-for=\"info in form.infos\" v-bind:key=\"info.version\">\n                    <el-radio v-model=\"form.version\" :label=\"info.version\" @change=\"onRadioChange\">{{info.version}}</el-radio>\n                </div>\n            </el-form-item>\n            <el-form-item :label=\"$t('i18n.scAddr')+ ':'\" >\n                 <el-input v-model=\"form.address\" :placeholder=\"$t('i18n.scAddr')\" :disabled=\"isEdit\"></el-input>\n            </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"cancel\">{{$t('i18n.cancel')}}</el-button>\n            <el-button type=\"primary\" @click=\"submitForm\">{{$t('i18n.confirm')}}</el-button>\n        </div>\n    </el-dialog>\n</div>\n</template>\n\n<script>\nimport {dataUrl,apiServerUrl} from '../../config'\nexport default {\n    data() {\n        return {\n            cnsList: [],\n            dialogFormVisible : false,\n            form:{\n                name:\"\",\n                version:\"\",\n                address:\"\",\n                infos:[]\n            },\n            isEdit:false\n        }\n    },\n    methods:{\n        getData(){\n            this.axios.get(dataUrl + '/cns',{\n                    params: {\n                        page_index: 1,\n                        page_size: 10000\n                    }\n                }).then(res => {\n                if (res && res.data) {\n                    this.cnsList = res.data.items;\n                }\n            }).catch(res => {\n                console.log(res)\n            })\n        },\n        openDialog(){\n            this.resetForm()\n            this.isEdit = false;\n            this.dialogFormVisible = true\n        },\n        onRowClick(row){\n            this.form = {\n                name:row.name,\n                version:row.version,\n                address:row.address,\n                infos:row.infos\n            }\n            this.isEdit = true\n            this.dialogFormVisible = true\n        },\n        submitForm(){\n            let url = '/superadmin/cns/setcnsnameforaddress'\n            if (this.isEdit){\n                url = '/superadmin/cns/cnsredirect'\n            }\n            this.axios.get(apiServerUrl + url,{\n                params: {\n                    Name:this.form.name,\n                    Version:this.form.version,\n                    Address:this.form.address\n                }\n            }).then(res => {\n                this.$message({\n                    type: 'success',\n                    message: this.$t('i18n.submitSuccess')\n                });\n            }).catch(res => {\n                this.$message({\n                    type: 'error',\n                    message: this.$t('i18n.submitFailed')\n                });\n            });\n\n            this.resetForm()\n            this.dialogFormVisible = false\n        },\n        cancel(){\n            this.resetForm()\n            this.dialogFormVisible = false\n        },\n        resetForm(){\n            this.form = {\n                name:\"\",\n                version:\"\",\n                address:\"\",\n                infos:[]\n            }\n        },\n        onRadioChange(val){\n            for  (let i = 0;i < this.form.infos.length ;i++){\n                let info = this.form.infos[i];\n                if (info.version == val){\n                    this.form.address = info.address;\n                }\n            }\n        }\n    },\n    mounted:function() {\n        this.getData()\n        setInterval(this.getData,5000)\n    },\n    props:{\n        height:{\n            default:270\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}